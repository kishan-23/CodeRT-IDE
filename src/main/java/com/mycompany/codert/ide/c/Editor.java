/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.codert.ide.c;

import java.awt.Font;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author kishan
 */
public class Editor extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Editor() {
        initComponents();
        TextLineNumber tln = new TextLineNumber(tpMainContent);
        jScrollPane1.setRowHeaderView(tln);
        currFilePath = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tpMainContent = new javax.swing.JTextPane(new HilightedDoc());
        panConsole = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tpInput = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tpOutput = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tpError = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        miNew = new javax.swing.JMenuItem();
        miOpen = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        miSave = new javax.swing.JMenuItem();
        miSaveAs = new javax.swing.JMenuItem();
        menuEdit = new javax.swing.JMenu();
        miCut = new javax.swing.JMenuItem();
        miCopy = new javax.swing.JMenuItem();
        miPaste = new javax.swing.JMenuItem();
        menuFormat = new javax.swing.JMenu();
        miWordWrap = new javax.swing.JCheckBoxMenuItem();
        miFontSize = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        miCompile_and_Run = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Code RT");

        tpMainContent.setFont(new java.awt.Font("Cascadia Code", 0, 14)); // NOI18N
        tpMainContent.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                tpMainContentCaretUpdate(evt);
            }
        });
        jScrollPane1.setViewportView(tpMainContent);

        panConsole.setLayout(new java.awt.GridLayout(1, 0));

        tpInput.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jScrollPane2.setViewportView(tpInput);

        panConsole.add(jScrollPane2);

        tpOutput.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jScrollPane3.setViewportView(tpOutput);

        panConsole.add(jScrollPane3);

        jScrollPane4.setViewportView(tpError);

        panConsole.add(jScrollPane4);

        jLabel1.setFont(new java.awt.Font("Microsoft JhengHei Light", 1, 14)); // NOI18N
        jLabel1.setText("Input");

        jLabel2.setFont(new java.awt.Font("Microsoft JhengHei Light", 1, 14)); // NOI18N
        jLabel2.setText("Output");

        jLabel3.setFont(new java.awt.Font("Microsoft JhengHei Light", 1, 14)); // NOI18N
        jLabel3.setText("Error");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(panConsole, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 245, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panConsole, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        menuFile.setText("File");

        miNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miNew.setText("New");
        miNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miNewActionPerformed(evt);
            }
        });
        menuFile.add(miNew);

        miOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miOpen.setText("Open");
        miOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miOpenActionPerformed(evt);
            }
        });
        menuFile.add(miOpen);
        menuFile.add(jSeparator1);

        miSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miSave.setText("Save");
        miSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveActionPerformed(evt);
            }
        });
        menuFile.add(miSave);

        miSaveAs.setText("Save As");
        miSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miSaveAsActionPerformed(evt);
            }
        });
        menuFile.add(miSaveAs);

        jMenuBar1.add(menuFile);

        menuEdit.setText("Edit");

        miCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miCut.setText("Cut");
        menuEdit.add(miCut);

        miCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miCopy.setText("Copy");
        menuEdit.add(miCopy);

        miPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miPaste.setText("Paste");
        menuEdit.add(miPaste);

        jMenuBar1.add(menuEdit);

        menuFormat.setText("Format");

        miWordWrap.setSelected(true);
        miWordWrap.setText("Word Wrap");
        menuFormat.add(miWordWrap);

        miFontSize.setText("Font Size");
        miFontSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miFontSizeActionPerformed(evt);
            }
        });
        menuFormat.add(miFontSize);

        jMenuBar1.add(menuFormat);

        jMenu3.setText("Run");

        miCompile_and_Run.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miCompile_and_Run.setText("Compile and Run");
        miCompile_and_Run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miCompile_and_RunActionPerformed(evt);
            }
        });
        jMenu3.add(miCompile_and_Run);

        jMenuBar1.add(jMenu3);

        jMenu5.setText("Help");
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(831, 508));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miNewActionPerformed
        // TODO add your handling code here:
        Editor newf = new Editor();
        newf.setVisible(true);
    }//GEN-LAST:event_miNewActionPerformed

    private void miOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        int r = jfc.showOpenDialog(null);

        //If user has choosen some file
        if (r == JFileChooser.APPROVE_OPTION) {
            FileReader fr = null;
            try {
                File fi = new File(jfc.getSelectedFile().getAbsolutePath());
                currFilePath = fi.getAbsolutePath();
                fr = new FileReader(fi);

                BufferedReader br = new BufferedReader(fr);
                try {
                    String content = br.readLine();
                    String line = "";
                    while ((line = br.readLine()) != null) {
                        content += ("\n" + line);
                    }

                    tpMainContent.setText(content);
                    this.setTitle(fi.getName()+" - Code RT");
                } catch (IOException ex) {
                    Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                }

            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(Editor.this, ex.getMessage());
                Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fr.close();
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(Editor.this, ex.getMessage());
                    Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_miOpenActionPerformed

    private void miSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveAsActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        int r = jfc.showSaveDialog(null);

        //If user has choosen some file
        if (r == JFileChooser.APPROVE_OPTION) {
            FileWriter fw = null;
            try {
                File fi = new File(jfc.getSelectedFile().getAbsolutePath());
                try {
                    fw = new FileWriter(fi);
                } catch (IOException ex) {
                    Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                currFilePath = fi.getAbsolutePath();
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(tpMainContent.getText());
                bw.flush();
                bw.close();
                this.setTitle(fi.getName()+" - Code RT");
                
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(Editor.this, ex.getMessage());
                Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_miSaveAsActionPerformed

    private void miFontSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miFontSizeActionPerformed
        // TODO add your handling code here:
        String input = JOptionPane.showInputDialog("Enter font size: ");
        int sz = Integer.parseInt(input);
        tpMainContent.setFont(new Font("Arial", Font.BOLD, sz));
    }//GEN-LAST:event_miFontSizeActionPerformed

    private void miCompile_and_RunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miCompile_and_RunActionPerformed
        tpOutput.setText("");
        tpError.setText("");
        this.miSaveActionPerformed(evt);
        CompileRunUtil cru = new CompileRunUtil(tpInput, tpOutput, tpError, new File(currFilePath));
        if(!cru.compile()) JOptionPane.showMessageDialog(tpMainContent, "Unsucessfull run");
        else JOptionPane.showMessageDialog(tpMainContent, "Run Successfull.");
    }//GEN-LAST:event_miCompile_and_RunActionPerformed

    private void tpMainContentCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_tpMainContentCaretUpdate
        // TODO add your handling code here:
    }//GEN-LAST:event_tpMainContentCaretUpdate

    private void miSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miSaveActionPerformed
        // TODO add your handling code here:
        if(currFilePath==null){
            miSaveAsActionPerformed(evt);
            return;
        }
        File fi = new File(currFilePath);
        try {
            FileWriter fw = new FileWriter(fi);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(tpMainContent.getText());
            bw.flush();
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(Editor.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_miSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor().setVisible(true);
            }
        });
    }

    //Custom Variables declaration
    private String currFilePath;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JMenu menuEdit;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuFormat;
    private javax.swing.JMenuItem miCompile_and_Run;
    private javax.swing.JMenuItem miCopy;
    private javax.swing.JMenuItem miCut;
    private javax.swing.JMenuItem miFontSize;
    private javax.swing.JMenuItem miNew;
    private javax.swing.JMenuItem miOpen;
    private javax.swing.JMenuItem miPaste;
    private javax.swing.JMenuItem miSave;
    private javax.swing.JMenuItem miSaveAs;
    private javax.swing.JCheckBoxMenuItem miWordWrap;
    private javax.swing.JPanel panConsole;
    private javax.swing.JTextPane tpError;
    private javax.swing.JTextPane tpInput;
    private javax.swing.JTextPane tpMainContent;
    private javax.swing.JTextPane tpOutput;
    // End of variables declaration//GEN-END:variables
}
